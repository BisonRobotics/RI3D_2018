// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4607.Greenhorns2018;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController elevatorElevator;
    public static SpeedController intakeIntake;
    public static SpeedController climberClimber;
    public static SpeedController drivetrainFL;
    public static SpeedController drivetrainFR;
    public static SpeedController drivetrainRL;
    public static SpeedController drivetrainRR;
    public static DifferentialDrive drivetrainDifferentialDrive;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        elevatorElevator = new Spark(7);
        ((Spark) elevatorElevator).setName("Elevator","Elevator");
        elevatorElevator.setInverted(false);
        intakeIntake = new Spark(6);
        ((Spark) intakeIntake).setName("Intake","Intake");
        intakeIntake.setInverted(false);
        climberClimber = new Spark(5);
        ((Spark) climberClimber).setName("Climber","Climber");
        climberClimber.setInverted(false);
        drivetrainFL = new Spark(0);
        ((Spark) drivetrainFL).setName("Drivetrain","FL");
        drivetrainFL.setInverted(false);
        drivetrainFR = new Spark(1);
        ((Spark) drivetrainFR).setName("Drivetrain","FR");
        drivetrainFR.setInverted(false);
        drivetrainRL = new Spark(2);
        ((Spark) drivetrainRL).setName("Drivetrain","RL");
        drivetrainRL.setInverted(false);
        drivetrainRR = new Spark(4);
        ((Spark) drivetrainRR).setName("Drivetrain","RR");
        drivetrainRR.setInverted(false);
        
        SpeedControllerGroup m_left = new SpeedControllerGroup(drivetrainFL, drivetrainRL);
        SpeedControllerGroup m_right = new SpeedControllerGroup(drivetrainFR, drivetrainRR);
        
        drivetrainDifferentialDrive = new DifferentialDrive(m_left, m_right);
        
        drivetrainDifferentialDrive.setSafetyEnabled(true);
        drivetrainDifferentialDrive.setExpiration(0.1);
        drivetrainDifferentialDrive.setMaxOutput(1.0);
        drivetrainDifferentialDrive.setDeadband(.05);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
